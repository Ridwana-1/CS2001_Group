// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(uuid())
  email            String    @unique
  fullname         String?
  password         String
  isVerified       Boolean   @default(false)
  createdAt        DateTime  @default(now())
  lastSeen         DateTime  @default(now())
  otp              String?
  otpExpiry        DateTime?
  resetToken       String?
  resetTokenExpiry DateTime?
  picture          String?
  channels         Channel[]
  sentMessages     Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")
  Profile          Profile?
  isGoogleUser     Boolean   @default(false)
  sessions         UserSession[]
}

model Profile {
  id        String  @id @default(uuid())
  bio       String?
  avatarUrl String?
  userId    String  @unique
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Channel {
  id          String   @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  users    User[]
  messages Message[]
}

model Message {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  senderId String
  sender   User   @relation("SentMessages", fields: [senderId], references: [id])

  receiverId String?
  receiver   User?   @relation("ReceivedMessages", fields: [receiverId], references: [id])

  channelId String
  channel   Channel @relation(fields: [channelId], references: [id], onDelete: Cascade)
}

model UserSession {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  token     String   @unique
  device    String?
  ip        String?
  createdAt DateTime @default(now())
  expiresAt DateTime
  lastUsed  DateTime @default(now())
  isActive  Boolean  @default(true)

  @@index([userId])
  @@index([token])
  @@index([expiresAt])
}
